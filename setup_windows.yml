- name: Setup WinRM Client Cert Authentication
  hosts: windows
  gather_facts: false

  tasks:
  - name: Verify required facts are setup
    assert:
      that:
      - username is defined

  - name: Check that the required files are present
    ansible.builtin.stat:
      path: '{{ playbook_dir }}/cert/{{ item }}'
    delegate_to: localhost
    run_once: true
    register: local_cert_stat
    loop:
    - ca.pem
    - client_cert.pem

  - name: Fail if local files have not been generated
    ansible.builtin.assert:
      that:
      - local_cert_stat.results[0].stat.exists
      - local_cert_stat.results[1].stat.exists

  - name: Generate local user password
    ansible.builtin.set_fact:
      user_password: "{{ lookup('ansible.builtin.password', playbook_dir ~ '/cert/user_password', length=15) }}"

  - name: Create local user
    ansible.windows.win_user:
      name: '{{ username }}'
      groups:
      - Administrators
      - Users
      update_password: always
      password: '{{ user_password }}'
      user_cannot_change_password: true
      password_never_expires: true

  - name: Copy across CA and client public certificates
    ansible.windows.win_copy:
      src: '{{ playbook_dir }}/cert/{{ item }}.pem'
      dest: C:\Windows\TEMP\{{ item }}.pem
    loop:
    - ca
    - client_cert

  - name: Import CA Cert as trusted root
    ansible.windows.win_certificate_store:
      path: C:\Windows\TEMP\ca.pem
      state: present
      store_location: LocalMachine
      store_name: Root

  - name: Trust client certificate as a trusted person
    ansible.windows.win_certificate_store:
      path: C:\Windows\TEMP\client_cert.pem
      state: present
      store_location: LocalMachine
      store_name: TrustedPeople
    register: client_cert_info

  - name: Enable WinRM Certificate auth
    ansible.windows.win_powershell:
      script: |
        $ErrorActionPreference = 'Stop'
        $Ansible.Changed = $false

        $authPath = 'WSMan:\localhost\Service\Auth\Certificate'
        if ((Get-Item -LiteralPath $authPath).Value -ne 'true') {
            Set-Item -LiteralPath $authPath -Value true
            $Ansible.Changed = $true
        }

  - name: Setup Client Certificate Mapping
    ansible.windows.win_powershell:
      parameters:
        Thumbprint: '{{ client_cert_info.thumbprints[0] }}'
      sensitive_parameters:
      - name: Credential
        username: '{{ username }}'
        password: '{{ user_password }}'
      script: |
        param(
            [Parameter(Mandatory)]
            [PSCredential]
            $Credential,

            [Parameter(Mandatory)]
            [string]
            $Thumbprint
        )

        $ErrorActionPreference = 'Stop'
        $Ansible.Changed = $false

        $userCert = Get-Item -LiteralPath "Cert:\LocalMachine\TrustedPeople\$Thumbprint"

        $certChain = New-Object -TypeName Security.Cryptography.X509Certificates.X509Chain
        [void]$certChain.Build($userCert)
        $caThumbprint = $certChain.ChainElements.Certificate[-1].Thumbprint
        $subject = "$($Credential.UserName)@localhost2"

        $mappings = Get-ChildItem -LiteralPath WSMan:\localhost\ClientCertificate |
            Where-Object {
                $mapping = $_ | Get-Item
                "Subject=$subject" -in $mapping.Keys
            }

        if ($mappings -and "issuer=$($caThumbprint)" -notin $mappings.Keys) {
            $null = $mappings | Remove-Item -Force -Recurse
            $mappings = $null
            $Ansible.Changed = $true
        }

        if (-not $mappings) {
            $certMapping = @{
                Path = 'WSMan:\localhost\ClientCertificate'
                Subject = $subject
                Issuer = $caThumbprint
                Credential = $Credential
                Force = $true
            }
            $null = New-Item @certMapping
            $Ansible.Changed = $true
        }

  - name: Generate inventory file that can be used for WinRM Certificate Auth
    ansible.builtin.template:
      src: cert_inventory.ini.j2
      dest: '{{ playbook_dir }}/cert_inventory.ini'
    delegate_to: localhost
    run_once: true

  - name: Output summary
    ansible.builtin.debug:
      msg: >-
        WinRM service and username have been configured. The remote user
        '{{ username }}' has been configured with the password
        '{{ user_password }}'. Use the '{{ playbook_dir }}/cert_inventory.ini'
        inventory file to connect to the remote host with the client
        certificate.
